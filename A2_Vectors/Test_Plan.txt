------------ Function: scalarMult ------------
-- Test Case Number: 1
-- Input: 5 (0, 0, 0, 0)
-- Expected Output: (0.0, 0.0, 0.0, 0.0)
-- Actual Output: (0.0, 0.0, 0.0, 0.0)
scalarMult 5 (0, 0, 0, 0) =? (0, 0, 0, 0),

-- Test Case Number: 2
-- Input: 5 (1, 1, 1, 1)
-- Expected Output: (5.0, 5.0, 5.0, 5.0)
-- Actual Output: (5.0, 5.0, 5.0, 5.0)
scalarMult 5 (1, 1, 1, 1) =? (5, 5, 5, 5),

-- Test Case Number: 3
-- Input: (-5) (-1, 1, 0, -0)
-- Expected Output: (5.0, -5.0, -0.0, 0.0)
-- Actual Output: (5.0, -5.0, -0.0, 0.0)
scalarMult 5 (-1, 1, 0, -0) =? (-5, 5, 0, 0),

-- Test Case Number: 4
-- Input: (1/(sqrt 2)) (1, -2, 5, 0)
-- Expected Output (approx): (0.707106, -1.41421, 3.53553, 0.0)
-- Actual Output: (0.7071067811865475, -1.414213562373095, 3.5355339059327373, 0.0)
scalarMult (1/(sqrt 2)) (1, -2, 5, 0) =? (0.70711, -1.41421, 3.53553, 0.0),

--------------- Function: add ---------------
-- Test Case Number: 1
-- Input: (0, 0, 0, 0) (1, 1, 1, 1)
-- Expected Output: (1.0, 1.0, 1.0, 1.0)
-- Actual Output: (1.0, 1.0, 1.0, 1.0)
add (0, 0, 0, 0) (1, 1, 1, 1) =? (1.0, 1.0, 1.0, 1.0),

-- Test Case Number: 2
-- Input: (-1.6, 1.6, 3.2, -3.2) (1.6, 1.6, 1.6, 1.6)
-- Expected Output: (0.0, 3.2, 4.8, -1.6)
-- Actual Output: (0.0,3.2,4.800000000000001,-1.6)
add (-1.6, 1.6, 3.2, -3.2) (1.6, 1.6, 1.6, 1.6) =? (0.0, 3.2, 4.8, -1.6),

-- Test Case Number: 3
-- Input: (1/(sqrt 2), 1/3, 0, 0) (1, 2/3, 1, 1)
-- Expected Output (approx): (1.70711, 1.0, 1.0, 1.0)
-- Actual Output: (1.7071067811865475,1.0,1.0,1.0)
add (1/(sqrt 2), 1/3, 0, 0) (1, 2/3, 1, 1) =? (1.70711, 1.0, 1.0, 1.0),

----------- Function: innerProduct -----------
-- Test Case Number: 1
-- Input: (0, 0, 0, 0) (1, 1, 1, 1)
-- Expected Output: 0.0
-- Actual Output: 0.0
innerProduct (0, 0, 0, 0) (1, 1, 1, 1) =. 0,

-- Test Case Number: 2
-- Input: (-1.6, 1, 3.2, -3.2) (1.6, 1.6, 1.6, 1.6)
-- Expected Output: -0.96
-- Actual Output: -0.9600000000000009
innerProduct (-1.6, 1, 3.2, -3.2) (1.6, 1.6, 1.6, 1.6) =. (-0.96),

-- Test Case Number: 3
-- Input: (1/(sqrt 2), 1/3, 0, 0) (1, 2/3, 1, 1)
-- Expected Output (approx): 0.9293
-- Actual Output: 0.9293290034087697
innerProduct (1/(sqrt 2), 1/3, 0, 0) (1, 2/3, 1, 1) =. 0.9293,

------------- Function: distance -------------
-- Test Case Number: 1
-- Input: (0, 0, 0, 0) (1, 1, 1, 1)
-- Expected Output: 2.0
-- Actual Output: 2.0
distance (0, 0, 0, 0) (1, 1, 1, 1) =. 2.0,

-- Test Case Number: 2
-- Input: (-1.6, 1, 3.2, -3.2) (1.6, 1.6, 1.6, 1.6)
-- Expected Output (approx): 6.0166
-- Actual Output: 6.01664358259653
distance (-1.6, 1, 3.2, -3.2) (1.6, 1.6, 1.6, 1.6) =. 6.0166,

-- Test Case Number: 3
-- Input: (1/(sqrt 2), 1/3, 0, 0) (1, 2/3, 1, 1)
-- Expected Output (approx): 1.4822
-- Actual Output: 1.4821934923410018
distance (1/(sqrt 2), 1/3, 0, 0) (1, 2/3, 1, 1) =. 1.4822,

------------- Function: maxDistance -------------
-- Test Case Number: 1
-- Input: [(0, 0, 0, 0), (1, 1, 1, 1), (-1, 1, 1, 1)]
-- Expected Output: (1.0, 1.0, 1.0, 1.0)
-- Actual Output: (1.0, 1.0, 1.0, 1.0)
maxDistance [(0, 0, 0, 0), (1, 1, 1, 1), (-1, 1, 1, 1)] =? (1.0, 1.0, 1.0, 1.0),

-- Test Case Number: 2
-- Input: [(-1.6, 1, 3.2, -3.2), (1.6, 1.6, 1.6, 1.6), (100, 0, 0, 0)]
-- Expected Output: (100.0, 0.0, 0.0, 0.0)
-- Actual Output: (100.0, 0.0, 0.0, 0.0)
maxDistance [(-1.6, 1, 3.2, -3.2), (1.6, 1.6, 1.6, 1.6), (100, 0, 0, 0)] =? (100.0, 0.0, 0.0, 0.0),

-- Test Case Number: 3
-- Input: [(-1.6, 1, 3.2, -3.2), (1.6, 1.6, 1.6, 1.6)]
-- Expected Output: (-1.6, 1.0, 3.2, -3.2)
-- Actual Output: (-1.6, 1.0, 3.2, -3.2)
maxDistance [(-1.6, 1, 3.2, -3.2), (1.6, 1.6, 1.6, 1.6)] =? (-1.6, 1, 3.2, -3.2),

-- Test Case Number: 4
-- Input: []
-- Expected Output: (0.0, 0.0, 0.0, 0.0)
-- Actual Output: (0.0, 0.0, 0.0, 0.0)
maxDistance [] =? (0.0, 0.0, 0.0, 0.0),

-- Test Case Number: 5
-- Input: [(1/(sqrt 2), 0, 0, 1/(sqrt 2)), (1, 0, 0, 0)]
-- Expected Output (approx): (0.7071, 0.0, 0.0, 0.7071)
-- Actual Output: (1.0, 0, 0, 0)
-- FAILED initial test, reason why is attributed to floating point error. 1st element is same distance
--        but when computed returns a distance of 0.9999999999.... instead of 1.0, so so 2nd is returned 
-- !!! maxDistance [(1/(sqrt 2), 0, 0, 1/(sqrt 2)), (1, 0, 0, 0)] =? (0.70710, 0.0, 0.0, 0.70710)

-- Test Case Number: 5.1
-- Input: [(1/(sqrt 2), 0, 0, 1/(sqrt 2)), (0.99, 0, 0, 0)]
-- Expected Output (approx): (0.7071, 0.0, 0.0, 0.7071)
-- Actual Output: (0.7071, 0.0, 0.0, 0.7071)
-- WORKED tested with lowered second distance, so it falls below 0.99999999.... in distance from origin
maxDistance [(1/(sqrt 2), 0, 0, 1/(sqrt 2)), (0.99, 0, 0, 0)] =? (0.7071, 0.0, 0.0, 0.7071)    